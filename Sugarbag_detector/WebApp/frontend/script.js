let currentFileId = '';
let currentFilename = '';

function setStatus(text, type = '') {
    const status = document.getElementById('status');
    status.textContent = text;
    status.className = type ? `status-${type}` : '';
}

async function uploadFile() {
    const fileInput = document.getElementById('fileInput');
    const uploadBtn = document.getElementById('uploadBtn');
    const downloadBtn = document.getElementById('downloadBtn');

    if (!fileInput.files[0]) {
        setStatus('‚ùå –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª!', 'error');
        return;
    }

    const file = fileInput.files[0];
    uploadBtn.disabled = true;
    setStatus('‚è≥ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞...', 'processing');

    const formData = new FormData();
    formData.append('file', file);

    try {
        const response = await fetch('http://127.0.0.1:8000/upload', {
            method: 'POST',
            body: formData
        });

        if (response.ok) {
            const result = await response.json();
            currentFileId = result.file_id;
            currentFilename = result.filename;

            setStatus('‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!', 'success');
            downloadBtn.style.display = 'block';

        } else {
            setStatus('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞', 'error');
        }

    } catch (error) {
        setStatus('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É', 'error');
        console.error('Error:', error);
    } finally {
        uploadBtn.disabled = false;
    }
}

function downloadFile() {
    if (!currentFileId) {
        setStatus('‚ùå –ù–µ—Ç —Ñ–∞–π–ª–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è', 'error');
        return;
    }

    setStatus('‚¨áÔ∏è –ù–∞—á–∏–Ω–∞–µ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ...', 'processing');

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
    const downloadUrl = `http://127.0.0.1:8000/download/${currentFileId}`;
    window.open(downloadUrl, '_blank');

    // –ß–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ã—á–Ω—ã–π —Å—Ç–∞—Ç—É—Å
    setTimeout(() => {
        setStatus('‚úÖ –§–∞–π–ª –≥–æ—Ç–æ–≤ –∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—é', 'success');
    }, 1000);
}

async function checkConnection() {
    try {
        const response = await fetch('http://127.0.0.1:8000/');
        if (response.ok) {
            console.log('‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç');
        }
    } catch (error) {
        setStatus('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±—ç–∫–µ–Ω–¥!', 'error');
        console.log('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ–¥–∞–µ—Ç');
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
function init() {
    // –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    document.getElementById('uploadBtn').addEventListener('click', uploadFile);
    document.getElementById('downloadBtn').addEventListener('click', downloadFile);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–º—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    document.getElementById('fileInput').addEventListener('change', function(e) {
        if (e.target.files[0]) {
            setStatus(`üìÅ –í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª: ${e.target.files[0].name}`);
        }
    });

    // –ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    checkConnection();
}

// –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', init);